// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Staff {
  id           Int         @id @default(autoincrement())
  firstName    String?
  lastName     String?
  designation  String?
  gender       GenderEnum?
  joinedDate   DateTime?
  dob          DateTime?
  addressLine1 String?
  addressLine2 String?
  addressLine3 String?
  addressLine4 String?
  addressLine5 String?
  contactNo    String?
  email        String      @unique
  role         RoleEnum?
  // vehicles          Vehicle[]           @relation("StaffVehicles")
  // equipment         Equipment?          @relation("StaffEquipment")
  // staffLogDetails   StaffLogDetails[]
  // staffFieldDetails StaffFieldDetails[]
}

enum GenderEnum {
  MALE
  FEMALE
  OTHER
}

enum RoleEnum {
  ADMIN
  MANAGER
  EMPLOYEE
}

//
// model Vehicle {
//   id       Int    @id @default(autoincrement())
//   usedBy   Staff? @relation("StaffVehicles", fields: [usedById], references: [id])
//   usedById Int?
// }
//
// model Equipment {
//   id      Int    @id @default(autoincrement())
//   staff   Staff? @relation("StaffEquipment", fields: [staffId], references: [id])
//   staffId Int?
// }
//
// model StaffLogDetails {
//   id      Int    @id @default(autoincrement())
//   staff   Staff? @relation(fields: [staffId], references: [id])
//   staffId Int?
// }
//
// model StaffFieldDetails {
//   id      Int    @id @default(autoincrement())
//   staff   Staff? @relation(fields: [staffId], references: [id])
//   staffId Int?
// }
